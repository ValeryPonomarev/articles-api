server:
  port: 8080

spring:
  application:
    name: articles-api
  jpa:
    database: default
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/articles}
    username: 'articlesapi'
    password: '123'
  kafka:
    # This list should be in the form host1:port1,host2:port2,...
    bootstrap-servers: ${KAFKA_URL:kafka:9092}
    producer:
      bootstrap-servers: ${KAFKA_URL:kafka:9092}
      client-id: ${spring.application.name}-producer-dev
      retries: 10
    consumer:
      bootstrap-servers: ${KAFKA_URL:kafka:9092}
      group-id: ${spring.application.name}-consumer-dev
      auto-offset-reset: earliest

app:
  kafka:
    article-topic-name: articles
    article-metric-topic-name: articles-metric

#kafka:
#  server: localhost:9092
#  group:
#    id: ${spring.application.name}-dev
#  producer:
#    id: articlesProducerId
#  app:
#    article-topic: articles

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://discovery:8761/eureka}

logging:
  level:
    root: INFO
